// 1) myReservation.html
// 2) myReservation.html
// 3) myReservation.css 
 세개 다 싹 갈아껴 주세요~



// 4) PayService.java
//// 새로 추가
	public void savePay(Long num) {
		
		Reservation reservation = reservationRepository.findByNum(num);
		
		reservation.setStat("결제완료");
		
		Pay pay = Pay.createPay();
		pay.setReservation(reservation);
		payRepository.save(pay);
		
	}



// 5) ReservationController.java
//// 환불 추가
    @PostMapping(value="/refundMyReservation/{num}")
    public String refundMyReservation(@PathVariable Long num) {
    	
    	Reservation reservation = reservationService.getDtl(num);

		String seatDetail = reservation.getApplication().getSeatDetail();

		Long deleteSeat = reservation.getApplication().getNum();
		int anum = Long.valueOf(deleteSeat).intValue();

		if (seatDetail != null) {
			String selectSeat = reservation.getSeat();
			String[] array = selectSeat.split(", ");

			seatService.cancelUpdateSeat(seatDetail, anum, array);
		}
		
		reservationService.refundReservation(num);
		
    	return "redirect:/reservations/myReservation";
    }



// 6) ReservationService.java
//// 변수 이름 수정
	public List<Reservation> getReservationList(Long num) {
		List<Reservation> reservations = reservationRepository.findAllByMemberNumOrderByNumDesc(num);
		return reservations;
	}

//// 환불 추가
	public void refundReservation(Long num) {
		String refund = "환불대기";
		reservationRepository.updateReservationStat(num, refund);
	}
	
	public void refundComplete(Long num) {
		String complete = "환불완료";
		reservationRepository.updateReservationStat(num, complete);
	}


// 7) ReservationRepository.java
//// 변수 이름 수정(조회조건)
	List<Reservation> findAllByMemberNumOrderByNumDesc(Long num);

//// 취소, 환불대기, 환불완료 쿼리변경
	@Modifying
	@Query(value="update Reservation r set r.stat = :statUpdate where r.reservation_num = :num", nativeQuery=true)
	void updateReservationStat(Long num, String statUpdate);


// 8) reservationMng.html
//// 전체


// 9) AdminController.java
//// 상품신청 승인상태 수정
	@GetMapping(value = "/approvalstatus/change/{num}")
	public String approvalstatusChange(@PathVariable("num") Long num, Model model) {

		try {
			Application application = applicationService.getApplication(num);
			applicationService.updateApprovalStatus(application);
		} catch (Exception e) {
			model.addAttribute("errorMessage", "프로그램 승인 중 에러가 발생하였습니다.");
			return "admin/applicationMng";
		}

		return "redirect:/admin/applications";
	}
	
	 @PostMapping(value="/refundComplete/{num}")
	 public String refundComplete(@PathVariable Long num) {
	    	
		 reservationService.refundComplete(num);
		 
		 return "redirect:/admin/reservationMng";
	 }


// 10) PayService.java
////  stat(상태) --> 결제완료 변경
	public void savePay(Long num) {
		
		Reservation reservation = reservationRepository.findByNum(num);
		
		reservation.setStat("결제완료");
		
		Pay pay = Pay.createPay();
		pay.setReservation(reservation);
		payRepository.save(pay);
		
	}